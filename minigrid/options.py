"""All of the application-level options."""
from functools import partial
import os

from tornado.options import define, options, parse_command_line

__all__ = ('options', 'parse_command_line', 'application_settings')

path = partial(os.path.join, os.path.dirname(__file__))
path.__doc__ = 'Full path relative to the directory of this file.'


def get_cookie_secret():
    """Return the secret key used for session cookies."""
    try:
        with open(path('../COOKIE_SECRET'), 'rb') as cookie_file:
            cookie_secret = cookie_file.read()
    except FileNotFoundError:
        with open(path('../COOKIE_SECRET'), 'wb') as new_cookie_file:
            cookie_secret = os.urandom(24)
            new_cookie_file.write(cookie_secret)
    return cookie_secret


define(
    'application_static_path', default=path('static'),
    help='Path to static resources'
)
define(
    'application_template_path', default=path('templates'),
    help='Path to HTML templates',
)
define(
    'application_cookie_secret',
    help='Generated by default in COOKIE_SECRET file'
)
define(
    'application_xsrf_cookies', default=True,
    help='Whether to use XSRF cookies'
)
define(
    'application_login_url', default='/',
    help="The application's login page"
)
define(
    'application_debug', default=False,
    help='Dangerous option that shows debug information for any error.'
)
define('minigrid_port', default='8888')
define('db_host', default='localhost')
define('db_port', default=5432)
define('db_database', default='minigrid')
define('db_schema', default='minigrid')
define('db_user', default='postgres')
define('db_password', default='password')


def application_settings():
    """Get only the Application settings from the options."""
    return {
        k[12:]: v
        for k, v in options.items()
        if k.startswith('application_')
    }
